@page "/products"
@using TrackIt.Models
@using TrackIt.Services
@rendermode InteractiveServer
@inject ProductService PS
@inject NavigationManager Navigation
@inject AppDbContext DbContext
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<PageTitle>Products</PageTitle>

<div class="container">
    <h1>Items</h1>
    <div class="search-container">
        <input type="text" placeholder="Search..." @bind="search" />
        <button class="btn-search" @onclick="Search">Search</button>
        <button class="btn-change-view" @onclick=ChangeView>Change View</button>
    </div>
</div>
<hr>

<div>
    <table class="@table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Product products in Products)
            {
                <tr>
                    <td>@products.Name</td>
                    <td>@products.StockQuantity</td>
                    <td>
                        <a href="/product-details/@products.Id" class="btn btn-primary btn-sm">View</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div id="cards" class="@card">
        @foreach (Product products in Products)
        {
            <div class="@card">
                <a href="/product-details/@products.Id">
                    <img src="@products.ImgUrl" alt="@products.Name image">
                </a>
                <h2>@products.Name</h2>
                <p>@products.StockQuantity</p>
            </div>
        }
    </div>
</div>

<h3>Products</h3>

@foreach (var group in DbContext.Products.GroupBy(p => p.Name))
{
    <h4>@group.Key</h4>
    <ul>
    @foreach (var product in group)
    {
        <li>
            <h5>@product.Name</h5>
            <p>Code: @product.Code</p>
            <p>Unit Measurement: @product.UnitMeasurement</p>
            <p>Manufactured Date: @product.ManufacturedDate.ToShortDateString()</p>
            <p>Expiry Date: @product.ExpiryDate.ToShortDateString()</p>
            <p>Price: @product.Price.ToString("C")</p>
            <p>Number of Boxes: @product.NumberOfBoxes</p>
            <img src="@product.ImageUrl" alt="@product.Name" width="100" />
        </li>
    }
    </ul>
}

@code {
    private List<Product> Products = new List<Product>();
    private string? search { get; set; }
    private string table = "";
    private string card = "hidden";

    protected override async Task OnInitializedAsync()
    {
        Products = await PS.Index();
    }

    private async void Search()
    {
        Products = await PS.Index(search);
    }

    private void ChangeView()
    {
        if (card == "hidden")
        {
            card = "";
            table = "hidden";
        }
        else
        {
            card = "hidden";
            table = "";
        }

    }
}